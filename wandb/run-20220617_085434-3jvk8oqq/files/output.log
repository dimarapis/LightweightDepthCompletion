task  :  decnet-completion
network_model  :  enet2021
mode  :  train
dataset  :  nn
workers  :  4
epochs  :  20
criterion  :  l2
batch_size  :  1
learning_rate  :  1e-05
weight_decay  :  1e-06
print_freq  :  10
resume  :
data_folder  :  /datasets
convolutional_layer_encoding  :  xyz
dilation_rate  :  2
val_h  :  352
val_w  :  608
min_depth_eval  :  0.1
max_depth_eval  :  80.0
kitti_crop  :  eigen_crop
train_datalist  :  train_dim_kitti.list
val_datalist  :  val_dim_kitti.list
root_folder  :  data/kitti_dataset/val_selection_cropped/
wandblogger  :  False
project  :  depth
entity  :  wandbdimar
STEP 2. Loading datasets...
Loaded 600 training files
Loaded 400 val files
STEP 3. Loading model and metrics...
Loaded model enet2021 for decnet-completion
STEP 4. Training or eval stage...
STEP. Testing block...








 94%|██████████████████████████████████████████████████████████▍   | 377/400 [00:17<00:01, 20.93it/s]
400.0
Results:
d1  =  0.8627962327003479
d2  =  0.9612934863567353
d3  =  0.9886573822796345
abs_rel  =  0.10718738820403814
sq_rel  =  0.7758614541776478
rmse  =  5.2193673402071
rmse_log  =  0.17142250591889024
log10  =  0.04784376933705062
silog  =  0.16539725314825773
100%|██████████████████████████████████████████████████████████████| 400/400 [00:18<00:00, 21.34it/s]



 20%|████████████▊                                                   | 15/75 [00:07<00:29,  2.03it/s]
Traceback (most recent call last):
  File "main.py", line 374, in <module>
    training_block()
  File "main.py", line 337, in training_block
    optimizer.step()
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/optim/optimizer.py", line 88, in wrapper
    return func(*args, **kwargs)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/optim/adam.py", line 144, in step
    eps=group['eps'])
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/optim/_functional.py", line 94, in adam
    denom = (exp_avg_sq.sqrt() / math.sqrt(bias_correction2)).add_(eps)
KeyboardInterrupt