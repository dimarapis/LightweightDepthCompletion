task  :  decnet-completion
network_model  :  enet2021
mode  :  train
dataset  :  nn
workers  :  4
epochs  :  100
criterion  :  l2
batch_size  :  1
learning_rate  :  1e-06
weight_decay  :  1e-06
print_freq  :  10
resume  :
data_folder  :  /datasets
convolutional_layer_encoding  :  xyz
dilation_rate  :  2
val_h  :  352
val_w  :  608
min_depth_eval  :  0.1
max_depth_eval  :  80.0
kitti_crop  :  eigen_crop
train_datalist  :  train_dim_kitti.list
val_datalist  :  val_dim_kitti.list
root_folder  :  data/kitti_dataset/val_selection_cropped/
torch_mode  :  pytorch
wandblogger  :  False
project  :  depth
entity  :  wandbdimar
STEP 2. Loading datasets...
Loaded 600 training files
Loaded 400 val files
  9%|████████████████▉                                                                                                                                                                                 | 35/400 [00:01<00:16, 22.73it/s]
STEP 3. Loading model and metrics...
Loaded model enet2021 for decnet-completion
STEP 4. Training or eval stage...
STEP. Testing block...
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    initial_lr: 1e-06
    lr: 1e-06
    weight_decay: 0
)
torch_minmax sparse (0.0, 0.990917980670929, 0.011295011267066002, 0.0)
sparse_shape_afta (0.0, 82.546875, 3.541639566421509, 0.0)
torch_minmax sparse (0.0, 0.994140625, 0.012669156305491924, 0.0)
sparse_shape_afta (0.0, 82.484375, 4.141428470611572, 0.0)
torch_minmax sparse (0.0, 0.8775879144668579, 0.010824785567820072, 0.0)
sparse_shape_afta (0.0, 75.96875, 4.086345672607422, 0.0)
torch_minmax sparse (0.0, 0.9806152582168579, 0.01204256433993578, 0.0)
sparse_shape_afta (0.0, 78.72265625, 3.239856719970703, 0.0)
torch_minmax sparse (0.0, 0.9786621332168579, 0.011606101877987385, 0.0)
sparse_shape_afta (0.0, 78.265625, 2.4452481269836426, 0.0)
torch_minmax sparse (0.0, 0.988037109375, 0.01005815714597702, 0.0)
sparse_shape_afta (0.0, 81.921875, 2.9276435375213623, 0.0)
torch_minmax sparse (0.0, 0.9769531488418579, 0.012160945683717728, 0.0)
sparse_shape_afta (0.0, 82.7265625, 4.736842632293701, 0.0)
torch_minmax sparse (0.0, 0.994384765625, 0.010709556750953197, 0.0)
sparse_shape_afta (0.0, 82.12890625, 4.199670314788818, 0.0)
torch_minmax sparse (0.0, 0.988525390625, 0.01158498227596283, 0.0)
sparse_shape_afta (0.0, 80.5703125, 4.416860580444336, 0.0)
torch_minmax sparse (0.0, 0.982421875, 0.0151756526902318, 0.0)
sparse_shape_afta (0.0, 80.83984375, 5.266642093658447, 0.0)
torch_minmax sparse (0.0, 0.948681652545929, 0.009732400998473167, 0.0)
sparse_shape_afta (0.0, 83.40234375, 3.931554079055786, 0.0)
torch_minmax sparse (0.0, 0.98779296875, 0.010873767547309399, 0.0)
sparse_shape_afta (0.0, 78.796875, 3.0631802082061768, 0.0)
torch_minmax sparse (0.0, 0.9671875238418579, 0.011365079320967197, 0.0)
sparse_shape_afta (0.0, 81.52734375, 3.1345932483673096, 0.0)
torch_minmax sparse (0.0, 0.975292980670929, 0.010640936903655529, 0.0)
sparse_shape_afta (0.0, 80.5703125, 3.5304391384124756, 0.0)
torch_minmax sparse (0.0, 0.9493652582168579, 0.01117303129285574, 0.0)
sparse_shape_afta (0.0, 84.859375, 4.689391136169434, 0.0)
torch_minmax sparse (0.0, 0.982470691204071, 0.010278201662003994, 0.0)
sparse_shape_afta (0.0, 82.6796875, 2.957580089569092, 0.0)
torch_minmax sparse (0.0, 0.9703613519668579, 0.01215060893446207, 0.0)
sparse_shape_afta (0.0, 85.1796875, 4.486386775970459, 0.0)
torch_minmax sparse (0.0, 0.9930176138877869, 0.011518566869199276, 0.0)
sparse_shape_afta (0.0, 82.55078125, 3.161186933517456, 0.0)
torch_minmax sparse (0.0, 0.914599597454071, 0.008679593913257122, 0.0)
sparse_shape_afta (0.0, 72.66015625, 1.497678279876709, 0.0)
torch_minmax sparse (0.0, 0.9798828363418579, 0.010606758296489716, 0.0)
sparse_shape_afta (0.0, 79.16796875, 3.1640069484710693, 0.0)
torch_minmax sparse (0.0, 0.8775390982627869, 0.010071465745568275, 0.0)
sparse_shape_afta (0.0, 71.2421875, 2.3518521785736084, 0.0)
torch_minmax sparse (0.0, 0.9923340082168579, 0.011352544650435448, 0.0)
sparse_shape_afta (0.0, 82.26953125, 3.157594919204712, 0.0)
torch_minmax sparse (0.0, 0.9671875238418579, 0.009458379819989204, 0.0)
sparse_shape_afta (0.0, 83.04296875, 3.1362011432647705, 0.0)
torch_minmax sparse (0.0, 0.872119128704071, 0.007727967109531164, 0.0)
sparse_shape_afta (0.0, 69.26953125, 1.3346781730651855, 0.0)
torch_minmax sparse (0.0, 0.9947265982627869, 0.01170323509722948, 0.0)
sparse_shape_afta (0.0, 80.5078125, 3.1203441619873047, 0.0)
torch_minmax sparse (0.0, 0.9898926019668579, 0.010978848673403263, 0.0)
sparse_shape_afta (0.0, 80.88671875, 3.9305551052093506, 0.0)
torch_minmax sparse (0.0, 0.990234375, 0.013066666200757027, 0.0)
sparse_shape_afta (0.0, 85.39453125, 3.8843886852264404, 0.0)
torch_minmax sparse (0.0, 0.994189441204071, 0.011779004707932472, 0.0)
sparse_shape_afta (0.0, 81.81640625, 3.6856892108917236, 0.0)
torch_minmax sparse (0.0, 0.9710449576377869, 0.011321593075990677, 0.0)
sparse_shape_afta (0.0, 77.92578125, 3.935231924057007, 0.0)
torch_minmax sparse (0.0, 0.9775390625, 0.008538545109331608, 0.0)
sparse_shape_afta (0.0, 78.08203125, 3.1605305671691895, 0.0)
torch_minmax sparse (0.0, 0.987744152545929, 0.011988199315965176, 0.0)
sparse_shape_afta (0.0, 82.56640625, 3.332319974899292, 0.0)
torch_minmax sparse (0.0, 0.9446777701377869, 0.009570370428264141, 0.0)
sparse_shape_afta (0.0, 81.203125, 3.2467408180236816, 0.0)
torch_minmax sparse (0.0, 0.9764160513877869, 0.013526483438909054, 0.0)
sparse_shape_afta (0.0, 83.6484375, 5.594851493835449, 0.0)
torch_minmax sparse (0.0, 0.9806152582168579, 0.01143648847937584, 0.0)
sparse_shape_afta (0.0, 81.05078125, 3.0611374378204346, 0.0)
torch_minmax sparse (0.0, 0.996142566204071, 0.009900388307869434, 0.0)
sparse_shape_afta (0.0, 82.9609375, 2.4726359844207764, 0.0)
torch_minmax sparse (0.0, 0.952587902545929, 0.011582807637751102, 0.0)
 20%|███████████████████████████████████████▎                                                                                                                                                          | 81/400 [00:03<00:14, 21.46it/s]
Traceback (most recent call last):
  File "main.py", line 476, in <module>
    evaluation_block()
  File "main.py", line 241, in evaluation_block
    inv_pred = model(image)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/dim/depth_2022/models/guide_depth.py", line 44, in forward
    y = self.feature_extractor(x)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/dim/depth_2022/models/guide_ddrnet.py", line 349, in forward
    self.spp(self.layer5(self.relu(x))),
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/dim/depth_2022/models/guide_ddrnet.py", line 193, in forward
    mode='bilinear')+x_list[3])))
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/modules/container.py", line 141, in forward
    input = module(input)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 179, in forward
    self.eps,
  File "/home/dim/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torch/nn/functional.py", line 2283, in batch_norm
    input, weight, bias, running_mean, running_var, training, momentum, eps, torch.backends.cudnn.enabled
KeyboardInterrupt
torch_minmax sparse (0.0, 0.9949707388877869, 0.012968501076102257, 0.0)
sparse_shape_afta (0.0, 80.05859375, 4.925283432006836, 0.0)
torch_minmax sparse (0.0, 0.9640136957168579, 0.009371687658131123, 0.0)
sparse_shape_afta (0.0, 82.0234375, 3.401230573654175, 0.0)
torch_minmax sparse (0.0, 0.9927734732627869, 0.012461588717997074, 0.0)
sparse_shape_afta (0.0, 80.60546875, 4.229017734527588, 0.0)
torch_minmax sparse (0.0, 0.8163086175918579, 0.011370651423931122, 0.0)
sparse_shape_afta (0.0, 64.35546875, 3.4267220497131348, 0.0)
torch_minmax sparse (0.0, 0.9957031607627869, 0.01076815277338028, 0.0)
sparse_shape_afta (0.0, 83.89453125, 4.021848201751709, 0.0)
torch_minmax sparse (0.0, 0.9727539420127869, 0.009886717423796654, 0.0)
sparse_shape_afta (0.0, 77.828125, 2.3402328491210938, 0.0)
torch_minmax sparse (0.0, 0.984326183795929, 0.013376472517848015, 0.0)
sparse_shape_afta (0.0, 83.9375, 4.475252151489258, 0.0)
torch_minmax sparse (0.0, 0.8290039300918579, 0.010534078814089298, 0.0)
sparse_shape_afta (0.0, 66.96875, 2.2698848247528076, 0.0)
torch_minmax sparse (0.0, 0.974169909954071, 0.011755198240280151, 0.0)
sparse_shape_afta (0.0, 82.26953125, 3.2429468631744385, 0.0)
torch_minmax sparse (0.0, 0.956787109375, 0.011951083317399025, 0.0)
sparse_shape_afta (0.0, 82.8046875, 3.215907335281372, 0.0)
torch_minmax sparse (0.0, 0.99560546875, 0.010805891826748848, 0.0)
sparse_shape_afta (0.0, 81.72265625, 2.9945530891418457, 0.0)
torch_minmax sparse (0.0, 0.9773926138877869, 0.0108571732416749, 0.0)
sparse_shape_afta (0.0, 83.21484375, 4.798525333404541, 0.0)
torch_minmax sparse (0.0, 0.989013671875, 0.01144416444003582, 0.0)
sparse_shape_afta (0.0, 83.0078125, 3.714388132095337, 0.0)
torch_minmax sparse (0.0, 0.833740234375, 0.010344630107283592, 0.0)
sparse_shape_afta (0.0, 68.44921875, 0.9934160709381104, 0.0)
torch_minmax sparse (0.0, 0.8485351800918579, 0.0117711266502738, 0.0)
sparse_shape_afta (0.0, 65.78515625, 3.182283639907837, 0.0)
torch_minmax sparse (0.0, 0.9334473013877869, 0.010191503912210464, 0.0)
sparse_shape_afta (0.0, 76.78125, 2.6662099361419678, 0.0)
torch_minmax sparse (0.0, 0.95263671875, 0.0129134776070714, 0.0)
sparse_shape_afta (0.0, 83.8203125, 5.623930931091309, 0.0)
torch_minmax sparse (0.0, 0.991015613079071, 0.010892920196056366, 0.0)
sparse_shape_afta (0.0, 79.74609375, 3.298118829727173, 0.0)
torch_minmax sparse (0.0, 0.994384765625, 0.010625145398080349, 0.0)
sparse_shape_afta (0.0, 83.52734375, 3.5844578742980957, 0.0)
torch_minmax sparse (0.0, 0.9473633170127869, 0.011718377470970154, 0.0)
sparse_shape_afta (0.0, 78.91015625, 4.269962787628174, 0.0)
torch_minmax sparse (0.0, 0.990771472454071, 0.01051342859864235, 0.0)
sparse_shape_afta (0.0, 81.24609375, 3.7869749069213867, 0.0)
torch_minmax sparse (0.0, 0.933349609375, 0.011318673379719257, 0.0)
sparse_shape_afta (0.0, 76.2265625, 4.085596084594727, 0.0)
torch_minmax sparse (0.0, 0.97412109375, 0.014223171398043633, 0.0)
sparse_shape_afta (0.0, 84.7421875, 4.267604827880859, 0.0)
torch_minmax sparse (0.0, 0.986523449420929, 0.012014913372695446, 0.0)
sparse_shape_afta (0.0, 79.625, 3.7904911041259766, 0.0)
torch_minmax sparse (0.0, 0.972412109375, 0.010375509969890118, 0.0)
sparse_shape_afta (0.0, 83.50390625, 3.7332170009613037, 0.0)
torch_minmax sparse (0.0, 0.9903320670127869, 0.01125871017575264, 0.0)
sparse_shape_afta (0.0, 79.6953125, 4.152091979980469, 0.0)
torch_minmax sparse (0.0, 0.9456543326377869, 0.011433671228587627, 0.0)
sparse_shape_afta (0.0, 81.23046875, 4.728923797607422, 0.0)
torch_minmax sparse (0.0, 0.971386730670929, 0.013984579592943192, 0.0)
sparse_shape_afta (0.0, 81.34765625, 5.192240238189697, 0.0)
torch_minmax sparse (0.0, 0.9730468988418579, 0.012376664206385612, 0.0)
sparse_shape_afta (0.0, 80.4765625, 4.0176849365234375, 0.0)
torch_minmax sparse (0.0, 0.959277331829071, 0.01047444436699152, 0.0)
sparse_shape_afta (0.0, 82.4375, 3.10910964012146, 0.0)
torch_minmax sparse (0.0, 0.971240222454071, 0.011964639648795128, 0.0)
sparse_shape_afta (0.0, 82.54296875, 4.655643463134766, 0.0)
torch_minmax sparse (0.0, 0.9898437857627869, 0.011810197494924068, 0.0)
sparse_shape_afta (0.0, 80.12890625, 3.4397592544555664, 0.0)
torch_minmax sparse (0.0, 0.974414050579071, 0.01231415756046772, 0.0)
sparse_shape_afta (0.0, 83.30859375, 4.680386066436768, 0.0)
torch_minmax sparse (0.0, 0.962890625, 0.010791325010359287, 0.0)
sparse_shape_afta (0.0, 77.53125, 3.1371099948883057, 0.0)
torch_minmax sparse (0.0, 0.916210949420929, 0.015155753120779991, 0.0)
sparse_shape_afta (0.0, 75.7421875, 3.840371608734131, 0.0)
torch_minmax sparse (0.0, 0.9710449576377869, 0.009709898382425308, 0.0)
sparse_shape_afta (0.0, 82.875, 3.2026259899139404, 0.0)
torch_minmax sparse (0.0, 0.9927734732627869, 0.009987572208046913, 0.0)
sparse_shape_afta (0.0, 82.40625, 3.330845832824707, 0.0)
torch_minmax sparse (0.0, 0.970996081829071, 0.011264687404036522, 0.0)
sparse_shape_afta (0.0, 81.73046875, 4.0298333168029785, 0.0)
torch_minmax sparse (0.0, 0.980029284954071, 0.010489690117537975, 0.0)
sparse_shape_afta (0.0, 78.24609375, 2.6117117404937744, 0.0)
torch_minmax sparse (0.0, 0.996044933795929, 0.01130853034555912, 0.0)
sparse_shape_afta (0.0, 79.5859375, 2.0200791358947754, 0.0)
torch_minmax sparse (0.0, 0.9476074576377869, 0.013772535137832165, 0.0)
sparse_shape_afta (0.0, 80.8359375, 5.279138565063477, 0.0)
torch_minmax sparse (0.0, 0.985058605670929, 0.01077968254685402, 0.0)
sparse_shape_afta (0.0, 84.3515625, 3.712512969970703, 0.0)
torch_minmax sparse (0.0, 0.990234375, 0.010367712937295437, 0.0)
sparse_shape_afta (0.0, 79.07421875, 2.5199027061462402, 0.0)
torch_minmax sparse (0.0, 0.9734863638877869, 0.011327622458338737, 0.0)
sparse_shape_afta (0.0, 81.8359375, 3.2545504570007324, 0.0)
torch_minmax sparse (0.0, 0.9751953482627869, 0.01237811241298914, 0.0)
sparse_shape_afta (0.0, 79.6640625, 4.754370212554932, 0.0)
torch_minmax sparse (0.0, 0.996142566204071, 0.01360312756150961, 0.0)
sparse_shape_afta (0.0, 81.43359375, 4.683745384216309, 0.0)